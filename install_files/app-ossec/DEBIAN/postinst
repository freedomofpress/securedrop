#!/bin/sh
# postinst script for securedrop-app-ossec
#
# see: dh_installdeb(1)
set -e
#set -x
# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)
        . /usr/share/debconf/confmodule
        # Get monitor IP and preseed securedrop-app-ossec monitor_ip
        db_get securedrop-app-ossec/monitor_ip
        monitor_ip="$RET"

        mkdir -p /etc/iptables/
        cat > /etc/iptables/rules_v4 << EOF
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:LOGNDROP - [0:0]

# Allow the tor instances used for ssh, source and document interface outbound access to default tor destination ports. 
# Need to use the group for the source/document users since that is the only id that exists outside of the chroot.
# Load before tor user drop rules
# Ports are from https://www.torproject.org/docs/faq#OutboundPorts 
-A OUTPUT -p tcp --match multiport --dports 80,8080,443,8443,9001,9030 -m owner --uid-owner messagebus -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "tor instance that provides ssh access"
-A OUTPUT -p tcp --match multiport --dports 80,8080,443,8443,9001,9030 -m owner --uid-owner debian-tor -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "tor instance that provides ssh access"
-A OUTPUT -p tcp --match multiport --dports 80,8080,443,8443,9001,9030 -m owner --gid-owner source-tor -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "source chrooted tor instances"
-A OUTPUT -p tcp --match multiport --dports 80,8080,443,8443,9001,9030 -m owner --gid-owner document-tor -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "document chrooted tor instances"
-A INPUT -p tcp --match multiport --sports 80,8080,443,8443,9001,9030 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow traffic back for tor" 

# Rate limit ssh connections coming from the tor network
# Restrict to users in the tor user
# Load before generic loopback rules
-A OUTPUT -o lo -p tcp --dport 22 -m owner --uid-owner debian-tor -m state --state NEW -m limit --limit 3/min --limit-burst 3 -j ACCEPT -m comment --comment "SSH with rate limiting only thur tor"
-A OUTPUT -o lo -p tcp --dport 22 -m owner --uid-owner debian-tor -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "SSH with rate limiting only thur tor"

# Drop all other outbound traffic by the tor users. Need to use the group for the source/document tor users 
# Load before generic loopback rules
-A OUTPUT -m owner --gid-owner source-tor -j LOGNDROP -m comment --comment "Drop all other traffic for source tor group id"
-A OUTPUT -m owner --gid-owner document-tor -j LOGNDROP -m comment --comment "Drop all other traffic for document tor group id"
-A OUTPUT -m owner --uid-owner debian-tor -j LOGNDROP -m comment --comment "Drop all other traffic for the tor instance used for ssh"

# Only allow inbound rules from loopback with a dport of 80 or 8080 respectively for source and document groups
# Load before application users drop rules
# Rate limiting does not make sense here because src ip is always loopback address
-A INPUT -i lo -p tcp --dport 80 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow tor connection from local loopback to connect to source int"
-A OUTPUT -o lo -p tcp --sport 80 -m owner --gid-owner source -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Restrict the source group outbound connections"
-A INPUT -i lo -p tcp --dport 8080 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow tor connection from local loopback to connect to document int"
-A OUTPUT -o lo -p tcp --sport 8080 -m owner --gid-owner document -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Restrict the document group outbound connections"

# Block all other traffic by application users
# Load before generic loopback rules
-A OUTPUT -m owner --gid-owner source -j LOGNDROP -m comment --comment "Drop all other traffic from the source int group id"
-A OUTPUT -m owner --gid-owner document -j LOGNDROP -m comment --comment "Drop all other traffic from the document int group id"
-A OUTPUT -m owner --uid-owner securedrop -j LOGNDROP -m comment --comment "Drop all other traffic by the securedrop user"

# Block all other outbound access for users in the ssh group
# Load before generic loopback rules
-A OUTPUT -m owner --gid-owner ssh -j LOGNDROP -m comment --comment "Drop all other outbound traffic for ssh user"

# DNS rules
-A OUTPUT -p tcp --dport 53 -m owner --uid-owner root -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "tcp/udp dns"
-A INPUT  -p tcp --sport 53 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "tcp/udp dns"
-A OUTPUT -p udp --dport 53 -m owner --uid-owner root -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "tcp/udp dns"
-A INPUT  -p udp --sport 53 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "tcp/udp dns"

# NTP rules
-A OUTPUT -p udp --sport 123 --dport 123 -m owner --uid-owner root -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "ntp"
-A INPUT  -p udp --sport 123 --dport 123 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "ntp"

# apt rules can't be restricted by destination address because iptables will only resolve FQDNs once at startup
-A OUTPUT -p tcp --match multiport --dports 80,8080,443 -m owner --uid-owner root -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "apt updates"
-A INPUT  -p tcp --match multiport --sports 80,8080,443 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "apt updates"

# OSSEC server-agent rules
# TODO add owner to OUTPUT rule
-A OUTPUT -d $monitor_ip -p udp --dport 1514 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "OSSEC server agent"
-A INPUT  -s $monitor_ip -p udp --sport 1514 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "OSSEC server agent"

# Allow generic loopback connections
-A INPUT  -i lo -p all -j ACCEPT -m comment --comment "Allow lo to lo traffic all protocols"
-A OUTPUT -o lo -p all -j ACCEPT -m comment --comment "Allow lo to lo traffic all protocols"

# Drop and log all other traffic
-A INPUT -j LOGNDROP -m comment --comment "Drop all other incomming traffic"
-A OUTPUT -j LOGNDROP -m comment --comment "Drop all other outgoing traffic"

# LOGNDROP everything else
-A LOGNDROP -p tcp -m limit --limit 5/min -j LOG --log-prefix "Denied_TCP " --log-ip-options --log-tcp-options --log-uid --log-level 4
-A LOGNDROP -p udp -m limit --limit 5/min -j LOG --log-prefix "Denied_UDP " --log-ip-options --log-uid --log-level 4
-A LOGNDROP -p icmp -m limit --limit 5/min -j LOG --log-prefix "Denied_ICMP " --log-ip-options --log-uid --log-level 4 
-A LOGNDROP -j DROP
COMMIT
EOF
	DIR="/var/ossec"
	USER="ossec"
	GROUP="ossec"
	OSSEC_HIDS_TMP_DIR="/tmp/ossec-hids"

        mkdir -p ${DIR}/active-response/bin
        mkdir -p ${DIR}/agentless
        mkdir -m 700 -p ${DIR}/.ssh
        mkdir -m 770 -p ${DIR}/etc/shared
        mkdir -p ${DIR}/bin
        mkdir -m 775 -p ${DIR}/queue/rids
        mkdir -p ${DIR}/queue/syscheck
        mkdir -p ${DIR}/queue/alerts
        mkdir -m 750 -p ${DIR}/queue/diff
        mkdir -m 770 -p ${DIR}/queue/ossec
        mkdir -m 770 -p ${DIR}/var/run
        mkdir -m 750 -p ${DIR}/logs

	OSMYSHELL="/sbin/nologin"
        if [ ! -f ${OSMYSHELL} ]; then 
	    if [ -f "/bin/false" ]; then
	        OSMYSHELL="/bin/false"
	    fi
	fi

        if ! getent group | grep -q "^ossec"
        then
            groupadd --system ossec
        fi
        if ! getent passwd | grep -q "^ossec"
        then
            useradd -d ${DIR} -s ${OSMYSHELL} -g ${GROUP} ${USER}
        fi

	# Default for all directories
	chmod -R 550 ${DIR}
	chown -R root:${GROUP} ${DIR}

	# To the ossec queue (default for agentd to read)
	chown -R ${USER}:${GROUP} ${DIR}/queue/ossec
	chmod -R 770 ${DIR}/queue/ossec

	# For the logging user
	chown -R ${USER}:${GROUP} ${DIR}/logs
	chmod -R 750 ${DIR}/logs
	chmod -R 775 ${DIR}/queue/rids
	touch ${DIR}/logs/ossec.log
	chown ${USER}:${GROUP} ${DIR}/logs/ossec.log
	chmod 664 ${DIR}/logs/ossec.log

        chown -R ${USER}:${GROUP} ${DIR}/queue/diff
        chmod -R 750 ${DIR}/queue/diff
        chmod 740 ${DIR}/queue/diff/* > /dev/null 2>&1 || true

	# For the etc dir
	chmod 550 ${DIR}/etc
	chown -R root:${GROUP} ${DIR}/etc
	if [ -f /etc/localtime ]; then
	    cp -pL /etc/localtime ${DIR}/etc/;
	    chmod 555 ${DIR}/etc/localtime
	    chown root:${GROUP} ${DIR}/etc/localtime
	fi

	if [ -f /etc/TIMEZONE ]; then
	    cp -p /etc/TIMEZONE ${DIR}/etc/;
	    chmod 555 ${DIR}/etc/TIMEZONE
	fi

	# More files
	chown root:${GROUP} ${DIR}/etc/internal_options.conf
	chown root:${GROUP} ${DIR}/etc/local_internal_options.conf >/dev/null 2>&1 || true
	chown root:${GROUP} ${DIR}/etc/client.keys >/dev/null 2>&1 || true
	chown root:${GROUP} ${DIR}/agentless/*
	chown ${USER}:${GROUP} ${DIR}/.ssh
	chown root:${GROUP} ${DIR}/etc/shared/*

	chmod 550 ${DIR}/etc
	chmod 440 ${DIR}/etc/internal_options.conf
	chmod 440 ${DIR}/etc/local_internal_options.conf >/dev/null 2>&1 || true
	chmod 440 ${DIR}/etc/client.keys >/dev/null 2>&1 || true
	chmod 550 ${DIR}/agentless/*
	chmod 700 ${DIR}/.ssh
	chmod 770 ${DIR}/etc/shared
	chmod 440 ${DIR}/etc/shared/*

	# For the /var/run
	chmod 770 ${DIR}/var/run
	chown root:${GROUP} ${DIR}/var/run

	# For util.sh 
	chown root:${GROUP} ${DIR}/bin/util.sh
	chmod +x ${DIR}/bin/util.sh

	# For binaries and active response
        chmod 755 ${DIR}/active-response/bin/*
        chown root:${GROUP} ${DIR}/active-response/bin/*
        chown root:${GROUP} ${DIR}/bin/*
        chmod 550 ${DIR}/bin/*

	# For ossec.conf
        cat > ${DIR}/etc/ossec.conf << EOF
<ossec_config>
  <client>
    <server-ip>$monitor_ip</server-ip>
  </client>
  <syscheck>
    <alert_new_files>yes</alert_new_files>
    <directories realtime="yes" check_all="yes" report_changes="yes">/var/ossec</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/etc,/usr/bin,/usr/sbin</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/var/chroot/source/etc,/var/chroot/source/usr/bin,/var/chroot/source/usr/sbin</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/var/chroot/document/etc,/var/chroot/document/usr/bin,/var/chroot/document/usr/sbin</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/bin,/sbin</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/var/chroot/source/bin,/var/chroot/source/sbin</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/var/chroot/document/bin,/var/chroot/document/sbin</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/var/lib/tor/hidden_service/,/var/lib/tor/lock</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/var/chroot/source/var/lib/tor/hidden_service/,/var/chroot/source/var/lib/tor/lock</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/var/chroot/document/var/lib/tor/hidden_service/,/var/chroot/document/var/lib/tor/lock</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/var/chroot/source/var/www</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/var/chroot/document/var/www</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/var/lib/tor/hidden_service/hostname</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/var/chroot/source/var/lib/tor/hidden_service/hostname</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/var/chroot/document/var/lib/tor/hidden_service/hostname</directories>
    <ignore>/var/chroot/source/var/www/securedrop/keys/pubring.gpg</ignore>
    <ignore>/var/chroot/document/var/www/securedrop/keys/pubring.gpg</ignore>
    <ignore>/var/chroot/source/var/www/securedrop/keys/secring.gpg</ignore>
    <ignore>/var/chroot/document/var/www/securedrop/keys/secring.gpg</ignore>
    <ignore>/var/chroot/source/var/www/securedrop/keys/trustdb.gpg</ignore>
    <ignore>/var/chroot/document/var/www/securedrop/keys/trustdb.gpg</ignore>
    <ignore>/var/chroot/source/var/www/securedrop/keys/trustdb.gpg</ignore>
    <ignore>/var/chroot/document/var/www/securedrop/keys/trustdb.gpg</ignore>
    <ignore>/var/chroot/source/var/www/securedrop/securedrop.log</ignore>
    <ignore>/var/chroot/document/var/www/securedrop/securedrop.log</ignore>
    <ignore>/var/chroot/source/var/www/securedrop/store</ignore>
    <ignore>/var/chroot/document/var/www/securedrop/store</ignore>
    <ignore>/var/chroot/document/var/www/securedrop/temp/</ignore>
    <ignore>/var/chroot/document/var/www/securedrop/db/</ignore>
    <ignore>/var/chroot/source/var/www/securedrop/db/</ignore>
    <ignore>/var/securedrop/store</ignore>
    <ignore>/var/securedrop/keys</ignore>
    <ignore>/var/securedrop/db</ignore>
    <ignore>/var/ossec/queue</ignore>
    <ignore>/var/ossec/logs</ignore>
    <ignore>/var/ossec/stats</ignore>
    <ignore>/var/ossec/var</ignore>
    <ignore>/etc/motd</ignore>
    <ignore>/etc/mtab</ignore>
    <ignore>/etc/mnttab</ignore>
    <ignore>/etc/hosts.deny</ignore>
    <ignore>/etc/mail/statistics</ignore>
    <ignore>/etc/random-seed</ignore>
    <ignore>/etc/adjtime</ignore>
    <ignore>/etc/httpd/logs</ignore>
    <ignore>/etc/utmpx</ignore>
    <ignore>/etc/wtmpx</ignore>
    <ignore>/etc/cups/certs</ignore>
    <ignore>/etc/dumpdates</ignore>
    <ignore>/etc/svc/volatile</ignore>
  </syscheck>
  <rootcheck>
    <rootkit_files>/var/ossec/etc/shared/rootkit_files.txt</rootkit_files>
    <rootkit_trojans>/var/ossec/etc/shared/rootkit_trojans.txt</rootkit_trojans>
    <system_audit>/var/ossec/etc/shared/system_audit_rcl.txt</system_audit>
    <system_audit>/var/ossec/etc/shared/cis_debian_linux_rcl.txt</system_audit>
  </rootcheck>
  <active-response>
    <disabled>yes</disabled>
  </active-response>
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/auth.log</location>
  </localfile>
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/syslog</location>
  </localfile>
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/dpkg.log</location>
  </localfile>
  <localfile>
    <log_format>command</log_format>
    <command>df -h</command>
  </localfile>
  <localfile>
    <log_format>full_command</log_format>
    <command>netstat -tan |grep LISTEN |grep -v 127.0.0.1 | sort</command>
  </localfile>
  <localfile>
    <log_format>full_command</log_format>
    <command>last -n 5</command>
  </localfile>
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/kern.log</location>
  </localfile>
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/tor/log</location>
  </localfile>
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/chroot/source/var/log/apache2/error.log</location>
  </localfile>
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/chroot/source/var/log/apache2/access.log</location>
  </localfile>
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/chroot/source/var/log/tor/log</location>
  </localfile>
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/chroot/document/var/log/apache2/error.log</location>
  </localfile>
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/chroot/document/var/log/apache2/access.log</location>
  </localfile>
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/chroot/document/var/log/tor/log</location>
  </localfile>
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/chroot/source/var/www/securedrop/securedrop.log</location>
  </localfile>
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/chroot/document/var/www/securedrop/securedrop.log</location>
  </localfile>
  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/unattended-upgrades/unattended-upgrades</location>
  </localfile>
</ossec_config>
EOF
        chown root:${GROUP} ${DIR}/etc/ossec.conf
        chmod 440 ${DIR}/etc/ossec.conf


	if [ -x /etc/init.d/ossec ]; then
	    update-rc.d -f ossec defaults
	fi

	if [ -d ${OSSEC_HIDS_TMP_DIR} ]; then
	    rm -r ${OSSEC_HIDS_TMP_DIR}
	fi

        db_stop
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
