#!/bin/sh
# postinst script for securedrop-app-hardening
#
# see: dh_installdeb(1)
set -e
#set -x
# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)

        . /usr/share/debconf/confmodule

        db_get securedrop-app-hardening/admin_user
        admin_user="$RET"

        db_get securedrop-app-hardening/tor_key_id
        TOR_KEY_ID="$RET"
 
        ## Add a config for the default admin
        groups="sudo ssh"
        for group in $groups; do
            if [ ! "$(getent group $group)" ]; then
                addgroup $group
            fi
            if [ ! "$(groups $admin_user | awk -F ": " "{print $2}" | grep -q "$group")" ]; then
                usermod -a -G $group $admin_user
            fi
        done

        if [ ! -f /home/$admin_user/.google_authenticator ]; then
            gauthcode=$(cat /dev/urandom | tr -dc 'A-Z' | head -c 16)
            cat > /home/$admin_user/.google_authenticator << EOF
$gauthcode
" RATE_LIMIT 3 30
" WINDOW_SIZE 17
" DISALLOW_REUSE
" TOTP_AUTH
EOF

            chown $admin_user:$admin_user /home/$admin_user/.google_authenticator
            chmod 600 /home/$admin_user/.google_authenticator
        fi

        chmod 400 /home/$admin_user/.google_authenticator

        if [ ! "$(grep "# SecureDrop App Server tor config" /etc/tor/torrc)" ]; then
            cat > /etc/tor/torrc << EOF
# SecureDrop App Server tor config
SocksPort 0
SafeLogging 1
RunAsDaemon 1
HiddenServiceDir /var/lib/tor/hidden_service/
HiddenServicePort 22 127.0.0.1:22
HiddenServiceAuthorizeClient stealth $admin_user
EOF
        fi

        # Restart tor to generate new ATHS cert and to load new config to avoid port in use when installing
        # tor in chroot jails
        service tor restart


        # configure host entry as 127.0.0.1 if not present so not to generate error for ossec iptables rule
        if [ ! "$(grep "monitor_host_entry" /etc/hosts )" ]; then
            echo "127.0.0.1 monitor_host_entry" >> /etc/hosts
        fi

        iptables-restore < /etc/iptables/rules_v4

        cat > /etc/pam.d/common-auth << EOF
auth required pam_google_authenticator.so
auth    [success=1 default=ignore]      pam_unix.so nullok_secure
auth    requisite                       pam_deny.so
auth    required                        pam_permit.so
auth    optional                        pam_ecryptfs.so unwrap
EOF
 
        cat > /etc/ssh/ssh_config << EOF
Host *
   ForwardAgent no
   ForwardX11 no
   ForwardX11Trusted no
   RhostsRSAAuthentication no
   RSAAuthentication yes
   PasswordAuthentication yes
   HostbasedAuthentication no
   GSSAPIAuthentication no
   GSSAPIDelegateCredentials no
   GSSAPIKeyExchange no
   GSSAPITrustDNS no
   BatchMode no
   CheckHostIP yes
   AddressFamily any
   StrictHostKeyChecking ask
   IdentityFile ~/.ssh/identity
   IdentityFile ~/.ssh/id_rsa
   IdentityFile ~/.ssh/id_dsa
   Port 22
   Protocol 2
   Cipher blowfish
   Ciphers blowfish-cbc,aes256-cbc,aes256-ctr
   MACs hmac-sha2-256,hmac-sha2-512
     SendEnv LANG LC_*
     HashKnownHosts yes
EOF

        cat > /etc/ssh/sshd_config << EOF
Port 22
ListenAddress 127.0.0.1:22
Protocol 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
UsePrivilegeSeparation yes
KeyRegenerationInterval 3600
ServerKeyBits 2048
SyslogFacility AUTH
LogLevel INFO
LoginGraceTime 120
PermitRootLogin no
StrictModes yes
RSAAuthentication yes
PubkeyAuthentication yes
IgnoreRhosts yes
RhostsRSAAuthentication no
HostbasedAuthentication no
PermitEmptyPasswords no
ChallengeResponseAuthentication yes
KerberosAuthentication no
KerberosGetAFSToken no
GSSAPIAuthentication no
X11Forwarding no
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
AcceptEnv LANG LC_*
UsePAM yes
UseDNS no
ClientAliveInterval 300
ClientAliveCountMax 0
Ciphers blowfish-cbc,aes256-cbc,aes256-ctr
MACs hmac-sha2-256,hmac-sha2-512
GatewayPorts no
AllowGroups ssh
AllowTcpForwarding no
EOF

        restart ssh

        # Set the sources.list to match the iptables rules
        if [ -r /lib/lsb/init-functions ]; then
            if [ "$( lsb_release -is )" = "Debian" ]; then
                distro="$( lsb_release -c )"
                os_url="http://http.debian.net/debian/"
                os_sec_url="http://security.debian.net/debian"
            else
                distro="$( lsb_release -c | cut -f 2 )"
                os_url="http://us.archive.ubuntu.com/ubuntu"
                os_sec_url="http://security.archive.ubuntu.com/ubuntu"
            fi
        fi
        cat > /etc/apt/sources.list << EOF
deb $os_url $distro main restricted
deb-src $os_url $distro main restricted
deb $os_url $distro-updates main restricted
deb-src $os_url $distro-updates main restricted
deb $os_url $distro universe
deb-src $os_url $distro universe
deb $os_url $distro-updates universe
deb-src $os_url $distro-updates universe
deb $os_url $distro multiverse
deb-src $os_url $distro multiverse
deb $os_url $distro-updates multiverse
deb-src $os_url $distro-updates multiverse
deb $os_url $distro-backports main restricted universe multiverse
deb-src $os_url $distro-backports main restricted universe multiverse
deb $os_sec_url $distro-security main restricted
deb-src $os_sec_url $distro-security main restricted
deb $os_sec_url $distro-security universe
deb-src $os_sec_url $distro-security universe
deb $os_sec_url $distro-security multiverse
deb-src $os_sec_url $distro-security multiverse
EOF

        # restart sysstat to apply the changes
        cat > /etc/default/sysstat << EOF
ENABLED="true"
EOF
        service sysstat restart

        # Load the sysctl config
        cat > /etc/sysctl.conf << EOF
net.ipv4.tcp_max_syn_backlog = 4096
net.ipv4.tcp_syncookies=1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
net.ipv4.icmp_echo_ignore_broadcasts = 1
net.ipv4.ip_forward = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1
EOF
        sysctl -p /etc/sysctl.conf

        apparmor_mode="aa-enforce"
        $apparmor_mode /etc/apparmor.d/var.chroot.source.usr.lib.apache2.mpm-worker.apache2
        $apparmor_mode /etc/apparmor.d/var.chroot.document.usr.lib.apache2.mpm-worker.apache2
        $apparmor_mode /etc/apparmor.d/var.chroot.source.usr.bin.tor
        $apparmor_mode /etc/apparmor.d/var.chroot.document.usr.bin.tor

        db_stop
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
