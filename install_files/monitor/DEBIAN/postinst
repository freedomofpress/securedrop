#!/bin/sh
# postinst script for monitor server package
#
# see: dh_installdeb(1)
set -e
#set -x
# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
. /usr/share/debconf/confmodule

case "$1" in
    configure)
        if [ -r /lib/lsb/init-functions ]; then
            if [ "$( lsb_release -is )" = "Debian" ]; then
                os="Debian"
                distro="$( lsb_release -c )"
                os_url="http://http.debian.net/debian/"
            else
                os="Ubuntu"
                distro="$( lsb_release -c | cut -f 2 )"
                os_url="http://us.archive.ubuntu.com/ubuntu"
                os_sec_url="http://security.archive.ubuntu.com/ubuntu"
            fi
        fi

        # Configure admin user
        db_get securedrop-monitor/admin_user
        admin_user="$RET"

        groups="sudo ssh"
        for group in $groups; do
            if [ ! "$(getent group $group)" ]; then
                addgroup $group
            fi

            if [ ! "$(groups $admin_user | awk -F ": " "{print $2}" | grep -q "$group")" ]; then
                usermod -a -G $group $admin_user
            fi
        done

        if [ ! -f /home/$admin_user/.google_authenticator ]; then
            gauthcode=$(cat /dev/urandom | tr -dc 'A-Z' | head -c 16)
            cat > /home/$admin_user/.google_authenticator << EOF
$gauthcode
" RATE_LIMIT 3 30
" WINDOW_SIZE 17
" DISALLOW_REUSE
" TOTP_AUTH
EOF

            chown $admin_user:$admin_user /home/$admin_user/.google_authenticator
            chmod 600 /home/$admin_user/.google_authenticator
        fi

        chmod 400 /home/$admin_user/.google_authenticator

        # Check to see if the admin is already in the torrc
        # If there are no other users add the admin as first user
        # If there are other users add the admin at the end of the list
        if [ ! "$(grep "$admin_user" /etc/tor/torrc)" ]; then
            if [ "$(grep "HiddenServiceAuthorizeClient stealth$" /etc/tor/torrc)" ];then
                sed -i "/HiddenServiceAuthorizeClient stealth/s/$/ $admin_user/" /etc/tor/torrc
            else
                sed -i "/HiddenServiceAuthorizeClient stealth/s/$/,$admin_user/" /etc/tor/torrc
            fi
        fi

        # Get remote IPs, hostnames, email addresses for iptables rules and ossec config
        db_get securedrop-monitor/app_ip
        app_ip="$RET"

        db_get securedrop-monitor/get_smtp
        smtp_server="$RET"

        db_get securedrop-monitor/get_email
        email_distro="$RET"

        db_get securedrop-monitor/get_email_from
        email_from="$RET"

        mkdir -p /etc/iptables

        cat > /etc/iptables/rules_v4 << EOF
# This file will be overwritten by the securedrop-monitor package.
# Any changes will be lost.
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:LOGNDROP - [0:0]
# DNS rules
-A OUTPUT -p tcp --dport 53 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow outgoing tcp/udp dns"
-A INPUT  -p tcp --sport 53 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow outgoing tcp/udp dns"
-A OUTPUT -p udp --dport 53 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow outgoing tcp/udp dns"
-A INPUT  -p udp --sport 53 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow outgoing tcp/udp dns"
# NTP rules
-A OUTPUT -p udp --sport 123 --dport 123 -j ACCEPT -m comment --comment "Allow outgoing ntp"
-A INPUT  -p udp --sport 123 --dport 123 -j ACCEPT -m comment --comment "Allow outgoing ntp"
# apt rules
-A OUTPUT -d us.archive.ubuntu.com -p tcp --match multiport --dports 80,8080,443 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow apt to approved mirrors"
-A INPUT  -s us.archive.ubuntu.com -p tcp --match multiport --sports 80,8080,443 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow apt to approved mirrors"
-A OUTPUT -d security.archive.ubuntu.com -p tcp --match multiport --dports 80,8080,443 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow apt to approved mirrors"
-A INPUT  -s security.archive.ubuntu.com -p tcp --match multiport --sports 80,8080,443 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow apt to approved mirrors"
-A OUTPUT -d deb.torproject.org -p tcp --match multiport --dports 80,8080,443 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow apt to approved mirrors"
-A INPUT  -s deb.torproject.org -p tcp --match multiport --sports 80,8080,443 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow apt to approved mirrors"

# OSSEC server-agent rules
-A INPUT  -s $app_ip -p udp --dport 1514 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow OSSEC agent to monitor"
-A OUTPUT -d $app_ip -p udp --sport 1514 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow OSSEC agent to monitor"
# OSSEC smtp out rules
-A OUTPUT -d $smtp_server -p tcp --match multiport --dports 25,2525,587,465,2526 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow ossec email alerts out"
-A INPUT -s $smtp_server -p tcp --match multiport --sports 25,2525,587,465,2526 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow ossec email alerts out"
#Dev testing ssh rules
#-A INPUT  -p tcp --match multiport --dports 22,2222,2200 -m state --state NEW -m limit --limit 3/min --limit-burst 3 -j ACCEPT -m comment --comment "Allow SSH with rate limiting only thur tor"
#-A INPUT  -p tcp --match multiport --dports 22,2222,2200 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow SSH with rate limiting only thur tor"
#-A OUTPUT -p tcp --match multiport --sports 22,2222,2200 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow SSH with rate limiting only thur tor"
#Production ssh access binded to the local loopback
-A INPUT -i lo -p tcp --dport 22 -m state --state NEW -m limit --limit 3/min --limit-burst 3 -j ACCEPT -m comment --comment "Allow SSH with rate limiting only thur tor"
-A INPUT -i lo -p tcp --dport 22 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow SSH with rate limiting only thur tor"
-A OUTPUT -o lo -p tcp --sport 22 -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow SSH with rate limiting only thur tor"
# Allow local traffic
-A INPUT  -i lo -p all -j ACCEPT -m comment --comment "Allow lo to lo traffic all protocols"
-A OUTPUT -o lo -p all -j ACCEPT -m comment --comment "Allow lo to lo traffic all protocols"
# Tor for ssh access rules
-A OUTPUT -p tcp -m owner --uid-owner debian-tor -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow traffic for the monitor host that provides ssh access"
-A INPUT  -p tcp -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allow all other established connections"
# This is needed for the installer to run
-A OUTPUT -p tcp -m owner --uid-owner root -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Needed for the installer to run"
# Drop and log all other traffic
-A INPUT -j LOGNDROP -m comment --comment "Drop all other incomming traffic"
-A OUTPUT -j LOGNDROP -m comment --comment "Drop all other outgoing traffic"
# LOGNFROP rules
-A LOGNDROP -p tcp -m limit --limit 5/min -j LOG --log-prefix "Denied_TCP " --log-level 4
-A LOGNDROP -p udp -m limit --limit 5/min -j LOG --log-prefix "Denied_UDP " --log-level 4
-A LOGNDROP -p icmp -m limit --limit 5/min -j LOG --log-prefix "Denied_ICMP " --log-level 4
-A LOGNDROP -j DROP
COMMIT
EOF

        # create OSSEC users and set file permissions
        #TODO move to debconf question
	DIR="/var/ossec/"
	USER="ossec"
	USER_MAIL="ossecm"
	USER_REM="ossecr"
	GROUP="ossec"
	OSSEC_HIDS_TMP_DIR="/tmp/ossec-hids"

	OSMYSHELL="/sbin/nologin"
        if [ ! -f ${OSMYSHELL} ]; then 
	    if [ -f "/bin/false" ]; then
	        OSMYSHELL="/bin/false"
	    fi
	fi
        mkdir -p ${DIR}/active-response/bin
        mkdir -p ${DIR}/stats
        mkdir -p ${DIR}/rules/translated/pure_ftpd
        mkdir -p ${DIR}/rules/translated
        mkdir -p ${DIR}/rules/log-entries
        mkdir -p ${DIR}/agentless
        mkdir -p ${DIR}/.ssh
        mkdir -p ${DIR}/etc/shared
        mkdir -p ${DIR}/bin
        mkdir -p ${DIR}/queue/fts
        mkdir -p ${DIR}/queue/agent-info
        mkdir -p ${DIR}/queue/agentless
        mkdir -p ${DIR}/queue/rids
        mkdir -p ${DIR}/queue/syscheck
        mkdir -p ${DIR}/queue/alerts
        mkdir -p ${DIR}/queue/diff
        mkdir -p ${DIR}/queue/rootcheck
        mkdir -p ${DIR}/queue/ossec
        mkdir -p ${DIR}/var/run
        mkdir -p ${DIR}/logs/firewall
        mkdir -p ${DIR}/logs/archives
        mkdir -p ${DIR}/logs/alerts
        mkdir -p ${DIR}/tmp

        cat > ${DIR}/etc/ossec.conf << EOF
<!-- This file will be overwritten by the securedrop-monitor package. -->
<!-- Any changes will be lost. -->
<ossec_config>
  <global>
    <email_notification>yes</email_notification>
    <email_to>$email_distro</email_to>
    <smtp_server>$smtp_server</smtp_server>
    <email_from>$email_from</email_from>
  </global>

  <syscheck>
    <alert_new_files>yes</alert_new_files>
    
    <!-- Directories to check  (perform all possible verifications) -->
    <directories realtime="yes" check_all="yes" report_changes="yes">/etc,/usr/bin,/usr/sbin</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/bin,/sbin</directories>
    <directories realtime="yes" check_all="yes" report_changes="yes">/var/ossec</directories>
  
    <!-- Files/directories to ignore -->
    <ignore>/var/ossec/queue</ignore>
    <ignore>/var/ossec/logs</ignore>
    <ignore>/var/ossec/stats</ignore>
    <ignore>/var/ossec/var</ignore>
    <ignore>/var/ossec/etc/shared/merged.mg</ignore>
    <ignore>/etc/grsec/learning.logs</ignore>
    <ignore>/etc/motd</ignore>
    <!-- Files/directories to ignore -->
    <ignore>/etc/mtab</ignore>
    <ignore>/etc/mnttab</ignore>
    <ignore>/etc/hosts.deny</ignore>
    <ignore>/etc/mail/statistics</ignore>
    <ignore>/etc/random-seed</ignore>
    <ignore>/etc/adjtime</ignore>
    <ignore>/etc/httpd/logs</ignore>
    <ignore>/etc/utmpx</ignore>
    <ignore>/etc/wtmpx</ignore>
    <ignore>/etc/cups/certs</ignore>
    <ignore>/etc/dumpdates</ignore>
    <ignore>/etc/svc/volatile</ignore>
  </syscheck>

  <rootcheck>
    <rootkit_files>/var/ossec/etc/shared/rootkit_files.txt</rootkit_files>
    <rootkit_trojans>/var/ossec/etc/shared/rootkit_trojans.txt</rootkit_trojans>
    <system_audit>/var/ossec/etc/shared/system_audit_rcl.txt</system_audit>
    <system_audit>/var/ossec/etc/shared/cis_debian_linux_rcl.txt</system_audit>
  </rootcheck>

  <active-response>
    <disabled>yes</disabled>
  </active-response>

  <remote>
    <connection>secure</connection>
  </remote>

  <alerts>
    <log_alert_level>1</log_alert_level>
    <email_alert_level>7</email_alert_level>
  </alerts>
  <!-- Files to monitor (localfiles) -->

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/auth.log</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/syslog</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/dpkg.log</location>
  </localfile>

  <localfile>
    <log_format>command</log_format>
    <command>df -h</command>
  </localfile>

 <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/kern.log</location>
  </localfile>

  <localfile>
    <log_format>full_command</log_format>
    <command>netstat -tan |grep LISTEN |grep -v 127.0.0.1 | sort</command>
  </localfile>

  <localfile>
    <log_format>full_command</log_format>
    <command>last -n 5</command>
  </localfile>

  <reports>
    <group>authentication_success</group>
    <user type="relation">srcip</user>
    <title>Daily report: Successful logins</title>
    <email_to>$email_distro</email_to>
  </reports>

  <reports>
    <group>syscheck</group>
    <title>Daily report: File Changes</title>
    <email_to>$email_distro</email_to>
  </reports>

  <email_alerts>
    <email_to>$email_distro</email_to>
    <group>authentication_success</group>
    <do_not_delay />
    <do_not_group />
  </email_alerts>

  <email_alerts>
    <email_to>$email_distro</email_to>
    <group>syscheck</group>
    <do_not_delay />
  </email_alerts>

  <email_alerts>
    <email_to>$email_distro</email_to>
    <group>low_diskspace</group>
    <do_not_delay />
  </email_alerts>
</ossec_config>

<ossec_config>  <!-- rules global entry -->
  <rules>
    <include>rules_config.xml</include>
    <include>pam_rules.xml</include>
    <include>sshd_rules.xml</include>
    <include>telnetd_rules.xml</include>
    <include>syslog_rules.xml</include>
    <include>arpwatch_rules.xml</include>
    <include>symantec-av_rules.xml</include>
    <include>symantec-ws_rules.xml</include>
    <include>pix_rules.xml</include>
    <include>named_rules.xml</include>
    <include>smbd_rules.xml</include>
    <include>vsftpd_rules.xml</include>
    <include>pure-ftpd_rules.xml</include>
    <include>proftpd_rules.xml</include>
    <include>ms_ftpd_rules.xml</include>
    <include>ftpd_rules.xml</include>
    <include>hordeimp_rules.xml</include>
    <include>roundcube_rules.xml</include>
    <include>wordpress_rules.xml</include>
    <include>cimserver_rules.xml</include>
    <include>vpopmail_rules.xml</include>
    <include>vmpop3d_rules.xml</include>
    <include>courier_rules.xml</include>
    <include>web_rules.xml</include>
    <include>web_appsec_rules.xml</include>
    <include>apache_rules.xml</include>
    <include>nginx_rules.xml</include>
    <include>php_rules.xml</include>
    <include>mysql_rules.xml</include>
    <include>postgresql_rules.xml</include>
    <include>ids_rules.xml</include>
    <include>squid_rules.xml</include>
    <include>firewall_rules.xml</include>
    <include>cisco-ios_rules.xml</include>
    <include>netscreenfw_rules.xml</include>
    <include>sonicwall_rules.xml</include>
    <include>postfix_rules.xml</include>
    <include>sendmail_rules.xml</include>
    <include>imapd_rules.xml</include>
    <include>mailscanner_rules.xml</include>
    <include>dovecot_rules.xml</include>
    <include>ms-exchange_rules.xml</include>
    <include>racoon_rules.xml</include>
    <include>vpn_concentrator_rules.xml</include>
    <include>spamd_rules.xml</include>
    <include>msauth_rules.xml</include>
    <include>mcafee_av_rules.xml</include>
    <include>trend-osce_rules.xml</include>
    <include>ms-se_rules.xml</include>
    <!-- <include>policy_rules.xml</include> -->
    <include>zeus_rules.xml</include>
    <include>solaris_bsm_rules.xml</include>
    <include>vmware_rules.xml</include>
    <include>ms_dhcp_rules.xml</include>
    <include>asterisk_rules.xml</include>
    <include>ossec_rules.xml</include>
    <include>attack_rules.xml</include>
    <include>openbsd_rules.xml</include>
    <include>clam_av_rules.xml</include>
    <include>bro-ids_rules.xml</include>
    <include>dropbear_rules.xml</include>
    <include>local_rules.xml</include>
  </rules>
</ossec_config>
<!-- rules global entry -->
EOF


        #TODO add no-login and other options to creating system users
        if ! getent group | grep -q "^ossec"
        then
            groupadd --system ossec
        fi
        if ! getent passwd | grep -q "^ossec"
        then
            useradd -d ${DIR} -s ${OSMYSHELL} -g ${GROUP} ${USER}
        fi
        if ! getent passwd | grep -q "^ossecm"
        then
            useradd -d ${DIR} -s ${OSMYSHELL} -g ${GROUP} ${USER_MAIL}
        fi
        if ! getent passwd | grep -q "^ossecr"
        then
            useradd -d ${DIR} -s ${OSMYSHELL} -g ${GROUP} ${USER_REM}
        fi

	# Default for all directories
	chmod -R 550 ${DIR}
	chown -R root:${GROUP} ${DIR}

	# AnalysisD needs to write to alerts: log, mail and cmds
	chown -R ${USER}:${GROUP} ${DIR}/queue/alerts
	chmod -R 770 ${DIR}/queue/alerts

	# To the ossec queue (default for analysisd to read)
	chown -R ${USER}:${GROUP} ${DIR}/queue/ossec
	chmod -R 770 ${DIR}/queue/ossec

	# To the ossec fts queue
	chown -R ${USER}:${GROUP} ${DIR}/queue/fts
	chmod -R 750 ${DIR}/queue/fts
	chmod 740 ${DIR}/queue/fts/* > /dev/null 2>&1 || true

	# To the ossec syscheck/rootcheck queue
	chown -R ${USER}:${GROUP} ${DIR}/queue/syscheck
	chmod -R 750 ${DIR}/queue/syscheck
	chmod 740 ${DIR}/queue/syscheck/* > /dev/null 2>&1 || true

	chown -R ${USER}:${GROUP} ${DIR}/queue/rootcheck
	chmod -R 750 ${DIR}/queue/rootcheck
	chmod 740 ${DIR}/queue/rootcheck/* > /dev/null 2>&1 || true

	chown -R ${USER}:${GROUP} ${DIR}/queue/diff
	chmod -R 750 ${DIR}/queue/diff
	chmod 740 ${DIR}/queue/diff/* > /dev/null 2>&1 || true

	chown -R ${USER_REM}:${GROUP} ${DIR}/queue/agent-info
	chmod -R 755 ${DIR}/queue/agent-info
	chmod 744 ${DIR}/queue/agent-info/* > /dev/null 2>&1 || true
	chown -R ${USER_REM}:${GROUP} ${DIR}/queue/rids
	chmod -R 755 ${DIR}/queue/rids
	chmod 744 ${DIR}/queue/rids/* > /dev/null 2>&1 || true

	chown -R ${USER}:${GROUP} ${DIR}/queue/agentless
	chmod -R 755 ${DIR}/queue/agentless
	chmod 744 ${DIR}/queue/agentless/* > /dev/null 2>&1 || true

	# For the stats directory
	chown -R ${USER}:${GROUP} ${DIR}/stats
	chmod -R 750 ${DIR}/stats

	# For the logging user
	chown -R ${USER}:${GROUP} ${DIR}/logs
	chmod -R 750 ${DIR}/logs
	touch ${DIR}/logs/ossec.log
	chown ${USER}:${GROUP} ${DIR}/logs/ossec.log
	chmod 664 ${DIR}/logs/ossec.log

	# Backup previous rules
	if [ -d ${DIR}/rules/ ]; then
	    mkdir ${DIR}/rules/backup-rules.$$
	    cp -pr ${DIR}/rules/*.xml ${DIR}/rules/backup-rules.$$/
	fi


	# restore the local rules
	if [ -f ${OSSEC_HIDS_TMP_DIR}/local_rules.xml ]; then
	    mv ${OSSEC_HIDS_TMP_DIR}/local_rules.xml ${DIR}/rules/local_rules.xml
	fi

	chown -R root:${GROUP} ${DIR}/rules
	chmod -R 550 ${DIR}/rules


	# For the etc dir
	chmod 550 ${DIR}/etc
	chown -R root:${GROUP} ${DIR}/etc
	if [ -f /etc/localtime ]; then
	    cp -pL /etc/localtime ${DIR}/etc/;
	    chmod 555 ${DIR}/etc/localtime
	    chown root:${GROUP} ${DIR}/etc/localtime
	fi

	if [ -f /etc/TIMEZONE ]; then
	    cp -p /etc/TIMEZONE ${DIR}/etc/;
	    chmod 555 ${DIR}/etc/TIMEZONE
	fi

	# For the /var/run
	chmod 770 ${DIR}/var/run
	chown root:${GROUP} ${DIR}/var/run

	# More files
	chown root:${GROUP} ${DIR}/etc/decoder.xml
	chown root:${GROUP} ${DIR}/etc/local_decoder.xml >/dev/null 2>&1 || true
	chown root:${GROUP} ${DIR}/etc/internal_options.conf
	chown root:${GROUP} ${DIR}/etc/local_internal_options.conf >/dev/null 2>&1 || true
	chown root:${GROUP} ${DIR}/etc/client.keys >/dev/null 2>&1 || true
	chown root:${GROUP} ${DIR}/etc/shared/*
	chown root:${GROUP} ${DIR}/agentless/*
	chown ${USER}:${GROUP} ${DIR}/.ssh
	chmod 440 ${DIR}/etc/decoder.xml
	chmod 440 ${DIR}/etc/local_decoder.xml >/dev/null 2>&1 || true
	chmod 440 ${DIR}/etc/internal_options.conf
	chmod 440 ${DIR}/etc/local_internal_options.conf >/dev/null 2>&1 || true
	chmod 440 ${DIR}/etc/client.keys >/dev/null 2>&1 || true
	chmod 550 ${DIR}/etc
	chmod 770 ${DIR}/etc/shared
	chmod 440 ${DIR}/etc/shared/*
	chmod 550 ${DIR}/agentless/*
	chmod 700 ${DIR}/.ssh

	rm ${DIR}/etc/shared/merged.mg >/dev/null 2>&1 || true
	chmod 755 ${DIR}/active-response/bin/*
	chown root:${GROUP} ${DIR}/active-response/bin/*
	chown root:${GROUP} ${DIR}/bin/*
	chmod 550 ${DIR}/bin/*
	chown root:${GROUP} ${DIR}/etc/ossec.conf
	chmod 440 ${DIR}/etc/ossec.conf

	if [ -x /etc/init.d/ossec ]; then
	    update-rc.d -f ossec defaults
	    invoke-rc.d ossec restart
	fi

	if [ -d ${OSSEC_HIDS_TMP_DIR} ]; then
	    rm -r ${OSSEC_HIDS_TMP_DIR}
	fi

        # Disable swap space
        swapoff -a

        # Reload tor before installing the interface packages in the jails to avoid port in use error
        service tor restart

        # ssh config
        cat > /etc/ssh/ssh_config << EOF
Host *
   ForwardAgent no
   ForwardX11 no
   ForwardX11Trusted no
   RhostsRSAAuthentication no
   RSAAuthentication yes
   PasswordAuthentication yes
   HostbasedAuthentication no
   GSSAPIAuthentication no
   GSSAPIDelegateCredentials no
   GSSAPIKeyExchange no
   GSSAPITrustDNS no
   BatchMode no
   CheckHostIP yes
   AddressFamily any
   StrictHostKeyChecking ask
   IdentityFile ~/.ssh/identity
   IdentityFile ~/.ssh/id_rsa
   IdentityFile ~/.ssh/id_dsa
   Port 22
   Protocol 2
   Cipher blowfish
   Ciphers blowfish-cbc,aes256-cbc,aes256-ctr
   MACs hmac-sha2-256,hmac-sha2-512
    SendEnv LANG LC_*
    HashKnownHosts yes
EOF

        cat > /etc/ssh/sshd_config << EOF
Port 22
ListenAddress 127.0.0.1:22
Protocol 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
UsePrivilegeSeparation yes
KeyRegenerationInterval 3600
ServerKeyBits 2048
SyslogFacility AUTH
LogLevel INFO
LoginGraceTime 120
PermitRootLogin no
StrictModes yes
RSAAuthentication yes
PubkeyAuthentication yes
IgnoreRhosts yes
RhostsRSAAuthentication no
HostbasedAuthentication no
PermitEmptyPasswords no
ChallengeResponseAuthentication yes
KerberosAuthentication no
KerberosGetAFSToken no
GSSAPIAuthentication no
X11Forwarding no
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
AcceptEnv LANG LC_*
UsePAM yes
UseDNS no
ClientAliveInterval 300
ClientAliveCountMax 0
Ciphers blowfish-cbc,aes256-cbc,aes256-ctr
MACs hmac-sha2-256,hmac-sha2-512
GatewayPorts no
AllowGroups ssh
AllowTcpForwarding no
EOF
        cat > /etc/pam.d/common-auth << EOF
auth required pam_google_authenticator.so
auth    [success=1 default=ignore]      pam_unix.so nullok_secure
auth    requisite                       pam_deny.so
auth    required                        pam_permit.so
auth    optional        pam_ecryptfs.so unwrap
EOF

        # reload ssh to load the new config
        restart ssh

        #Unattended-upgrades
        cat > /etc/apt/apt.conf.d/20auto-upgrades << EOF
APT::Periodic::Update-Package-Lists "1";
APT::Periodic::Unattended-Upgrade "1";
EOF
        cat > /etc/apt/apt.conf.d/50unattended-upgrades << EOF
Unattended-Upgrade::Origins-Pattern {
        "\${distro_id}:\${distro_codename}-security";
};
Unattended-Upgrade::Package-Blacklist {
};
Unattended-Upgrade::Mail "root";
Unattended-Upgrade::Remove-Unused-Dependencies "true";
Unattended-Upgrade::Automatic-Reboot "true";
EOF

        # Set the sources.list to match the iptables rules
        #TODO update so url distro codename aren't hard coded
        cat > /etc/apt/sources.list << EOF
deb $os_url $distro main restricted
deb-src $os_url $distro main restricted
deb $os_url $distro-updates main restricted
deb-src $os_url $distro-updates main restricted
deb $os_url $distro universe
deb-src $os_url $distro universe
deb $os_url $distro-updates universe
deb-src $os_url $distro-updates universe
deb $os_url $distro multiverse
deb-src $os_url $distro multiverse
deb $os_url $distro-updates multiverse
deb-src $os_url $distro-updates multiverse
deb $os_url $distro-backports main restricted universe multiverse
deb-src $os_url $distro-backports main restricted universe multiverse
deb $os_sec_url $distro-security main restricted
deb-src $os_sec_url $distro-security main restricted
deb $os_sec_url $distro-security universe
deb-src $os_sec_url $distro-security universe
deb $os_sec_url $distro-security multiverse
deb-src $os_sec_url $distro-security multiverse
EOF

        # Enable sysstat
        cat > /etc/default/sysstat << EOF
ENABLED="true"
EOF
        # restart sysstat to apply the changes
        service sysstat restart

        # Load the sysctl config
        #TODO need ensure don't overwrite a grsec lock
        cat > /etc/sysctl.conf << EOF
net.ipv4.tcp_max_syn_backlog = 4096
net.ipv4.tcp_syncookies=1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
net.ipv4.icmp_echo_ignore_broadcasts = 1
net.ipv4.ip_forward = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1
# Grsecurity Kernel related configs
#kernel.grsecurity.grsec.lock = 1
EOF

        sysctl -p /etc/sysctl.conf

        # apply iptables rules
        iptables-restore < /etc/iptables/rules_v4

        db_stop
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
