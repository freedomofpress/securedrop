---
# Ensure that the build machine is present. If it hasn't been created,
# then Vagrant will not add it to the generated inventory file. Since
# the build machine is required for staging runs, error out with a helpful
# message, pointing the developer to the docs.
- name: Ensure Build VM is available.
  hosts: localhost
  connection: local
  gather_facts: no
  sudo: no
  tasks:
    - name: Check for "build" machine in inventory.
      fail:
        msg: >
          The "build" VM is not reachable, but is required for building the
          app code Debian packages on the staging machines. Run `vagrant up build`,
          then `vagrant provision /staging/`. Thereafter you can run
          `ANSIBLE_ARGS="--tags rebuild" vagrant provision /staging/` to rebuild
          and reinstall the application code. See the docs for details:
          https://docs.securedrop.org/en/latest/development/getting_started.html

      when: "'build' not in groups.all"
  tags: rebuild

# All plays in this playbook target the build host, but most be invoked separately,
# since we're using wrapper roles for the build. If you add multiple child roles with
# the same parent in the same play, Ansible conflates the dependencies, and only the
# last wrapper role will run. This is a known bug and will be fixed in v2.0.
- name: Build SecureDrop application Debian package from local repository.
  hosts: build
  vars_files:
    # The App Server vars are only necessary for building the securedrop-app-code package,
    # for the `development_dependencies` apt packages. Without these packages, the deb file
    # will build successfully, but fail on installation. See the comments in the regression
    # spectests on the build host for details.
    - group_vars/securedrop_application_server.yml
  roles:
    - { role: build-securedrop-app-code, tags: [build, rebuild, securedrop-app-code] }
  sudo: yes

- name: Build SecureDrop OSSEC Server Debian package from local repository.
  hosts: build
  roles:
    - { role: build-securedrop-ossec-server, tags: [build, rebuild, ossec, securedrop-ossec-server] }
  sudo: yes

- name: Build SecureDrop OSSEC Agent Debian package from local repository.
  hosts: build
  roles:
    - { role: build-securedrop-ossec-agent, tags: [build, rebuild, ossec, securedrop-ossec-agent] }
  sudo: yes
