---
  # Running unattended-upgrades right after the first install will require a
  # reboot. this needs to be done prior to iptable rules and ssh hardening
- name: ensure unattended-upgrades is installed
  apt: name=unattended-upgrades state=latest

- name: ensure 50unattended-upgrades is installed
  copy: src=50unattended-upgrades dest=/etc/apt/apt.conf.d/ mode=0644

- name: ensure 20auto-upgrades is installed
  copy: src=20auto-upgrades dest=/etc/apt/apt.conf.d/ mode=0644

  # On the initial install the first update can take awhile. Use the built in
  # module rather than the command module.
- name: ensure the aptitude package is installed
  apt: name=aptitude state=latest

- name: apt-get upgrade safe
  apt: upgrade=safe

  # Run the task and just poll every 5 sec for it to either finish without
  # requiring a reboot or ignore_error if a reboot happens between polling
  # times.
- name: run unattended-upgrades
  command: unattended-upgrades
  ignore_errors: yes
  async: 100
  poll: 5
  sudo: yes

  # Give the server time to cycle before checking to see if it up
  # The var ansible_ssh_host for what host to check will work in production,
  # vagrant and snap-ci environments.
  # This is ran from the host machine and shouldn't be ran as root.
- name: waiting for server to come back
  local_action:
    module: wait_for
      host={{ ansible_ssh_host }}
      port={{ ansible_ssh_port }}
      delay=45
      state=started
  sudo: false
