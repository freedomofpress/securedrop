---
# Contact the OSSEC server and ensure that the authd process
# is not running. Declaring these as tasks rather than handlers
# to ensure that the the cleanup happens every time, in case
# authd was somehow left running, e.g. if playbook was interrupted.

- name: Check if authd process is running on Monitor Server.
  command: pgrep ossec-authd
  # pgrep returns 1 if no process is found, so ignore that error.
  # This is essentially a read-only task, with the subsequent task
  # potentially making changes
  failed_when: false
  changed_when: false
  register: ossec_authd_running_check
  delegate_to: "{{ groups.securedrop_monitor_server.0 }}"
  tags:
    - iptables
    - ossec_auth
    - authd

- name: Kill authd process (if running) on Monitor Server.
  # This should work using the pattern to grep for in the output of ps per
  # http://docs.ansible.com/service_module.html
  # Currently getting an error saying
  # failed: [mon-staging] => {"failed": true}
  #  msg: service not found: ossec-authd
  # service: name=ossec-authd pattern=/var/ossec/bin/ossec-authd state=started
  command: kill {{ item }}
  # It's technically possible that pgrep will return more than one PID.
  # Let's be careful and kill each process, even though in most cases there
  # will be only one, if any.
  with_items: "{{ ossec_authd_running_check.stdout_lines }}"
  delegate_to: "{{ groups.securedrop_monitor_server.0 }}"
  when: ossec_authd_running_check.rc == 0 and
        ossec_authd_running_check.stdout != ""
  tags:
    - iptables
    - ossec_auth
    - authd
