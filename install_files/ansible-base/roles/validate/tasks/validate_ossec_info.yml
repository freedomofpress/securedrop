---
- name: Validate OSSEC Admin email address.
  assert:
    that:
      - "'@' in ossec_alert_email"
      - ossec_alert_email != "ossec@ossec.test"
    msg: >-
      OSSEC Admin email address must be valid.
      This address is used to receive OSSEC notifications.
      {{ securedrop_validate_error_msg_start }} the `ossec_alert_email` var
      is set correctly.

- name: Validate SASL username for OSSEC config.
  assert:
    that:
      # Ensure not the dummy value specified in example vars file.
      - sasl_username != "test"
      - "'@' not in sasl_username"
    msg: >-
      The SASL username should not include the domain name.
      {{ securedrop_validate_error_msg_start }} the `sasl_username` var
      is set correctly.

- name: Validate SASL password for OSSEC config.
  assert:
    that:
      # Ensure not the dummy value specified in example vars file.
      - sasl_password != "password123"
      - sasl_password|length >= 8
    msg: >-
      Password for OSSEC email account must be strong.
      {{ securedrop_validate_error_msg_start }} the `sasl_password` var
      is set correctly.

# Validating that vars are defined before using them to build
# service-checking commands.
- name: Ensure mail config vars are defined.
  assert:
    that:
      - smtp_relay is defined
      - sasl_domain is defined

# In Tails, we must explicitly pass a number of arguments, such as forcing
# TCP via the "virtual circuit" option. Due to networking variability within
# Tails due to Tor, we'll also retry the command several times to make sure
# flaky connections don't result in early failures. In Tails, we must also
# pass the entire command through `torify`, otherwise it will fail immediately.
- name: Determine query strategy for mail config checks.
  set_fact:
    _smtp_hostname_query_command: >-
      {% if ansible_lsb.id == "Tails" -%}torify {% endif %}
      host -W=10 -R=3 -T -4 {{ smtp_relay }} {{ dns_server }}
    _sasl_hostname_query_command: >-
      {% if ansible_lsb.id == "Tails" %}torify {% endif %}
      host -W=10 -R=3 -T -4 {{ sasl_domain }} {{ dns_server }}

- name: Perform SMTP lookup check.
  command: "{{ _smtp_hostname_query_command }}"
  changed_when: false
  register: smtp_validate_result
  # We'll inspect the output of this command in the next task to see if
  # an address was found.
  ignore_errors: yes

- name: Validate SMTP relay connection.
  assert:
    that:
      - "'has address' in smtp_validate_result.stdout"
    msg: >-
      The SMTP relay domain failed during lookup. This domain
      is the server contacted for authentication in order to send
      OSSEC email notifications.
      {{ securedrop_validate_error_msg_start }} the `smtp_relay` var
      is set correctly.

- name: Perform SASL lookup check.
  command: "{{ _sasl_hostname_query_command }}"
  register: sasl_validate_result
  changed_when: false
  # We'll inspect the output of this command in the next task to see if
  # an address was found.
  ignore_errors: yes

- name: Validate SASL domain.
  assert:
    that:
      - "'has address' in sasl_validate_result.stdout"
    msg: >-
      The SASL domain failed during lookup. This is typically the
      portion of the email address after the '@' symbol, although
      configurations may vary.
      {{ securedrop_validate_error_msg_start }} the `sasl_domain` var
      is set correctly.
