---
- name: Check whether Firefox is installed.
  command: firefox --version
  changed_when: false
  # Command will fail if Firefox is absent; don't halt.
  failed_when: false
  register: firefox_installed_result

- name: Uninstall dist-provided version of Firefox.
  apt:
    name: firefox
    state: absent
    purge: yes
  when:
    - not firefox_installed_result|failed
    - firefox_installed_result.stdout != "Mozilla Firefox 46.0.1"

# Selenium 3 makes breaking changes with the 2.X API, and requires the
# installation of the Mozilla geckodriver. Since the Aaron Swartz Day Hackathon
# is approaching, which will involve many new external contributors, we've
# decided to play it as safe as possible by downgrading Firefox to the latest
# version (46.0.1) that is compatible with the last 2.X series Selenium release
# (2.53.6). After the Hackathon, we'll resolve the geckodriver business and
# remove the following three tasks (as well as add firefox back to the
# `test_apt_dependencies` list).
- name: Download Firefox 46.0.1 for compatibility with Selenium 2.53.6.
  get_url:
    # Since the whole tasklisk is run as root, the ansible_env.HOME fact is
    # /root. Since this command doesn't need to be run as root and is part of a
    # crutch anyway, I've just hardcoded /tmp
    dest: "/opt/firefox_46.0.1+build1-0ubuntu0.14.04.3_amd64.deb"
    url: https://launchpad.net/~ubuntu-mozilla-security/+archive/ubuntu/ppa/+build/9727836/+files/firefox_46.0.1+build1-0ubuntu0.14.04.3_amd64.deb
    sha256sum: 88d25053306d33658580973b063cd459a56e3596a3a298c1fb8ab1d52171d860
  tags:
    - apt

- name: Install dependencies for Firefox 46.0.1.
  apt:
    name: "{{ item }}"
  with_items:
    - libasound2
    - libcairo-gobject2
    - libgtk-3-0
    - libstartup-notification0
  tags:
    - apt

- name: Install Firefox 46.0.1 for compatibility with Selenium 2.53.6.
  apt:
    deb: "/opt/firefox_46.0.1+build1-0ubuntu0.14.04.3_amd64.deb"
  tags:
    - apt

- name: Set apt hold on Firefox version (via apt).
  command: apt-mark hold firefox
  register: apt_hold_firefox_result
  # apt-mark will return output to report changed status; subsequent runs
  # will report "firefox was already set on hold."
  changed_when: "'firefox set on hold' in apt_hold_firefox_result.stdout"

- name: Set apt hold on Firefox version (via aptitude).
  command: aptitude hold firefox
  # `aptitude hold <package>` doesn't report meaningful changed status,
  # so mark the task as not changed.
  changed_when: false
