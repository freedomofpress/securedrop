---
- name: Install dependencies for building securedrop-app-code deb package.
  apt:
    pkg: "{{ item }}"
    state: latest
  with_items: "{{ development_dependencies }}"
  tags: apt

- name: Install pip wheel.
  pip:
    name: wheel
  tags: pip

- name: Copy install_files/securedrop-app-code dir to build path.
  synchronize:
    src: ../securedrop-app-code/
    dest: "{{ securedrop_app_code_deb_dir }}"
    delete: yes
    recursive: yes
    use_ssh_args: "{{ 'yes' if amazon_builder else omit }}"

- debug: var=securedrop_code

- name: Copy app code to build directory.
  synchronize:
    src: ../../securedrop/
    dest: "{{ securedrop_code_filtered }}"
    recursive: yes
    delete: yes
    use_ssh_args: "{{ 'yes' if amazon_builder else omit }}"
    rsync_opts: "{{ securedrop_app_rsync_opts }}"

- include: sass.yml

- name: Create pip wheel archive for Debian package requirements.
  command: >
    pip wheel
    -r {{ securedrop_code_filtered }}/requirements/securedrop-requirements.txt
    -w {{ securedrop_app_code_deb_dir }}/var/securedrop/wheelhouse
  tags: pip

- include: translations.yml

- name: Create apparmor.d directory in build path.
  file:
    state: directory
    dest: "{{ securedrop_app_code_deb_dir }}/etc/apparmor.d"
  tags: apparmor

- name: Copy AppArmor profiles to build path.
  copy:
    src: "{{ item }}"
    dest: "{{ securedrop_app_code_deb_dir }}/etc/apparmor.d/{{ item }}"
  with_items: "{{ apparmor_profiles }}"
  tags: apparmor

- name: Build securedrop-app-code Debian package.
  command: dpkg-deb --build {{ securedrop_app_code_deb_dir }}

- name: Fetch newly built Debian packages back to localhost.
  fetch:
    src: "{{ securedrop_app_code_deb_dir }}.deb"
    dest: "{{ ossec_build_deb_package_local_dest_dir }}"
    flat: yes
    fail_on_missing: yes
