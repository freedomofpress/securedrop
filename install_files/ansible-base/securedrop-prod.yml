---
- name: Validate presence of Application and Monitor Servers.
  hosts: [ mon, app, mon-prod, app-prod ]
  # The manage-groups role dynamically adds hosts to groups,
  # which allows Ansible to reference group_vars files. Since
  # group_vars files are only read on the start of a play,
  # it's important that this role happen in its own play, before
  # running the playbook against production servers.
  roles:
    - { role: manage-groups, tags: manage-groups }

- name: Validate instance-specific variables before provisioning.
  hosts: securedrop
  # Manual include for the production vars file, since we don't have support
  # for "group_vars" for prod-specific yet. Must be included on all plays
  # for the SecureDrop Application and Monitor Servers.
  vars_files:
    - prod-specific.yml
  roles:
    - { role: validate, tags: validate }
  sudo: yes

- name: Add FPF apt repository and install base packages.
  hosts: securedrop
  vars_files:
    - prod-specific.yml
  roles:
    - { role: common, tags: common }
    - { role: tor-hidden-services, tags: tor }
    - { role: grsecurity, when: grsecurity, tags: [grsec, grsecurity] }
  sudo: yes

- name: Configure SecureDrop Monitor Server.
  hosts: securedrop_monitor_server
  vars_files:
    - prod-specific.yml
  roles:
    - { role: ossec-server, tags: [ ossec, ossec_server ] }
  sudo: yes

- name: Configure SecureDrop Application Server.
  hosts: securedrop_application_server
  vars_files:
    - prod-specific.yml
  roles:
    - { role: ossec-agent, tags: [ ossec, ossec_agent ] }
    - { role: app, tags: app }
    - role: backup
      # By default backups will NOT run, since they can claim a substantial
      # amount of disk space. Enable backups explicitly via a backup var, or
      # implicitly if performing a restore.
      when: (perform_backup is defined and perform_backup == true) or
            (restore_file is defined and restore_file != '')
      tags: backup

  sudo: yes

  # This section will put the ssh and iptables rules in place
  # It will then add any staging exemptions required
  # at the end of each host section is when the handlers are run.
  # So iptables will not be reloaded until the exemptions are applied
  # for production the last task is apply iptables. This will break their
  # connection. After that point the admin will to proxy traffic over tor.
- name: Lock down firewall configuration for Application and Monitor Servers.
  hosts: securedrop
  vars_files:
    - prod-specific.yml
  roles:
    - { role: restrict-direct-access, tags: [ common, restrict-direct-access ] }
  sudo: yes

- name: Reboot Application and Monitor Servers.
  hosts: securedrop
  vars_files:
    - prod-specific.yml
  roles:
    - { role: reboot, tags: reboot }
  sudo: yes
