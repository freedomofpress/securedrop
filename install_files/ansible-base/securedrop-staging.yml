---
- hosts: [ 'mon-staging', 'app-staging' ]

  vars_files:
    - group_vars/securedrop.yml
    - staging-specific.yml

  roles:
    - { role: install_fpf_repo, tags: [ 'fpf_repo' ] }
    - { role: common, tags: [ 'common' ] }

  sudo: yes

- hosts: [ 'mon-staging' ]

  vars_files:
    - group_vars/securedrop.yml
    - host_vars/mon.yml
    - staging-specific.yml

  roles:
    - { role: common-mon, tags: [ 'tor' ] }
    # this is a staging only role
    - { role: install_local_pkgs, tags: [ 'install_local_pkgs' ] }
    - ossec_server

  sudo: yes

- hosts: [ 'mon-staging', 'app-staging' ]

  vars_files:
    - group_vars/securedrop.yml
    - host_vars/app.yml
    - staging-specific.yml

  roles:
    # The common-app role should be renamed.
    # It installs tor. Tor is required to be installed prior to the securedrop
    # app-code package which contains an apparmor profile that depends on tor
    # being present.
    - { role: common-app, tags: [ 'tor' ] }
    # this is a staging only role
    - { role: install_local_pkgs, tags: [ 'install_local_pkgs' ] }
    - { role: ossec_agent, tags: [ 'ossec' ] }
    - app
    - { role: app-test, tags: [ 'app-test' ] }

  sudo: yes

  # If the OSSEC authd iptables rule exemptions are in place remove them and
  # restart OSSEC. For the ossec agent the exemptions are removed as part of
  # the authd role, in order to allow all agents to connect to the ossec server
  # before killing authd and removing the ossec rules. This is a separate role for
  # the ossec server. The order of events does matter: the monitor server authd
  # service needs to be listening and reachable, then agent needs to connect to
  # ossec server, agent needs to restart, then ossec server exemptions can be
  # removed and the ossec server process can restart.
- hosts: [ 'mon-staging' ]

  vars_files:
    - group_vars/securedrop.yml
    - host_vars/mon.yml
    - staging-specific.yml

  roles:
    - { role: remove_authd_exemptions, tags: [ 'ossec' ] }

  sudo: yes

  # This section will put the ssh and iptables rules in place
  # It will then add any staging exemptions required
  # at the end of each host section is when the handlers are run.
  # So iptables will not be reloaded until the exemptions are applied
  # for production the last task is apply iptables. This will break their
  # connection. After that point the admin will to proxy traffic over tor.
- hosts: [ 'app-staging' ]

  vars_files:
    - group_vars/securedrop.yml
    - host_vars/app.yml
    - staging-specific.yml

  roles:
    - { role: restrict_direct_access_app, tags: [ 'common' ] }
    - { role: allow_direct_access, tags: [ 'common' ] }
    - { role: backup_app, tags: [ 'backup_app' ] }

  sudo: yes

- hosts: [ 'mon-staging' ]

  vars_files:
    - group_vars/securedrop.yml
    - host_vars/mon.yml
    - staging-specific.yml

  roles:
    - { role: restrict_direct_access_mon, tags: [ 'common' ] }
    - { role: allow_direct_access, tags: [ 'common' ] }
    - { role: backup_mon, tags: [ 'backup_mon' ] }

  sudo: yes
