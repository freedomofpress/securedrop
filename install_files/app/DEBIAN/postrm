#!/bin/sh
# postrm script for securedrop-app
#
# see: dh_installdeb(1)

set -e
#set -x
# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
. /usr/share/debconf/confmodule

case "$1" in
    upgrade|failed-upgrade)
    ;;

    remove|abort-install|abort-upgrade|disappear)
    ;;

    purge)

        # Stop running process then unmount the shared directory for each chroot jail
        source_schroot='schroot -c source -u root --directory / --'
        if [ -x /var/chroot/source/usr/bin/service ]; then
            if [ "$($source_schroot pgrep apache2)" ]; then
                $source_schroot service apache2 stop
            fi
        fi
        if [ -x /var/chroot/source/usr/bin/service ]; then
            if [ "$($source_schroot pgrep -u source-tor tor)" ]; then
                $source_schroot service tor stop
            fi
        fi

        source_root='/var/chroot/source/var/www/securedrop'
        source_mounts="$source_root/keys $source_root/store $source_root/db /var/chroot/source/proc"
        for mount in $source_mounts; do
            if mount | grep "$mount"; then
                umount $mount
            fi
        done

        if [ -d /var/chroot/source ]; then
            rm -R /var/chroot/source
        fi

        document_schroot='schroot -c document -u root --directory / --'
        if [ -x /var/chroot/document/usr/bin/service ]; then
            if [ "$($document_schroot pgrep apache2)" ]; then
                $document_schroot service apache2 stop
            fi
        fi
        if [ -x /var/chroot/document/usr/bin/service ]; then
            if [ "$($document_schroot pgrep -u document-tor tor)" ]; then
                $document_schroot service tor stop
            fi
        fi

        document_root='/var/chroot/document/var/www/securedrop'
        document_mounts="$document_root/keys $document_root/store $document_root/db /var/chroot/document/proc"
        for mount in $document_mounts; do
            if mount | grep "$mount"; then
                umount $mount
            fi
        done

        if [ -d /var/chroot ]; then
            rm -R /var/chroot
        fi

        if [ -d /var/chroot ]; then
            rm -R /var/chroot
        fi

        if [ "$(getent passwd securedrop)" ]; then
            deluser $app_user
        fi

        if [ "$(getent group securedrop)" ]; then
            delgroup $app_user
        fi

        if [ "$(getent group document)" ]; then
            delgroup document
        fi

        if [ "$(getent group source)" ]; then
            delgroup source
        fi

	if getent passwd | grep -q "^ossec"
	then
		deluser ossec
	fi

	if getent group | grep -q "^ossec"
	then
		delgroup ossec
	fi

        if [ -f /etc/init.d/ossec ]; then
	    rm -f /etc/init.d/ossec
        fi

        if [ -f /etc/ossec-init.conf ]; then
	    rm -f /etc/ossec-init.conf
        fi

	update-rc.d -f ossec remove

        #Remove req 2fa and allow non local loopback access
        sed -i 's/^ChallengeResponseAuthentication yes/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config
        sed -i 's/^auth required pam_google_authenticator.so/#auth required pam_google_authenticator.so/' /etc/pam.d/common-auth
        sed -i 's/^ListenAddress 127.0.0.1:22/#ListenAddress 127.0.0.1:22/' /etc/ssh/sshd_config
        restart ssh
        iptables --flush

        db_purge
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
