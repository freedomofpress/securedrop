Internationalization (i18n)
===========================

The code, templates and javascript user visible strings must all be
wrapped with `gettext`_ functions to be substituted at runtime with
the equivalent localized string. These function names are used as
markers to collect the strings to be translated and store them into
the ``securedrop/translations/messages.pot`` file. For each language
to be translated, a directory is created such as
``securedrop/translations/fr_FR`` and populated with files derived
from ``securedrop/translations/messages.pot``, for translators to work
with and for the `gettext`_ substitution at runtime.

The desktop icon are in the
``install_files/ansible-base/roles/tails-config/templates`` directory.
Their labels are collected in the ``desktop.pot`` file and translated
in the corresponding ``.po`` files in the same directory (``fr.po``,
``de.po`` etc.)

The manage.py translate helper
------------------------------

The `pybabel`_ and `gettext`_ command line is wrapped into the
``manage.py translate-messages`` and ``manage.py translate-desktop``
helpers for convenience. It is designed to be used by developers, to
run tests with fixtures and for packaging.

Updating strings to be translated
---------------------------------

After modifying a string in the code, templates, javascript or desktop
labels, the ``.pot`` files must be updated by running the following
command in ``/vagrant/securedrop``, in the development virtual
machine::

    make translate

which wraps ``manage.py translate-messages`` and ``manage.py
translate-desktop``.  The updated
``securedrop/translations/messages.pot`` and
``install_files/ansible-base/roles/tails-config/templates/desktop.pot``
should then be reviewed and commited. Once merged in develop, the
changes will be visible in the `Weblate`_ web interface used by
translators because it watches the develop branch of the SecureDrop
repository.

Compiling translations
----------------------

`gettext`_ needs a compiled file for each language (the ``*.mo``
files). This can be done by running the following command
in ``/vagrant/securedrop``, in the development virtual machine::

    ./manage.py --verbose translate-messages --compile

For desktop files the compilation phases creates a modified version of
the original file which includes all the translations collected from
the ``.po`` files.

This can be done by running the following command in
``/vagrant/securedrop``, in the development virtual machine::

    ./manage.py --verbose translate-desktop --compile

Verifying translations
----------------------

After a translation is compiled, the web page in which it shows can be
verified visually by navigating to the corresponding state from
``http://localhost:8080`` for the source interface or
``http://localhost:8081`` for the journalist interface after running
the following::

     ./manage.py run

An easier way is to generate screenshots for each desired language
with::

     $ export PAGE_LAYOUT_LOCALES=en_US,fr_FR
     $ pytest -v --page-layout tests/pages-layout
     ...
     ...TestJournalistLayout::test_col_no_documents[en_US] PASSED
     ...TestJournalistLayout::test_col_no_documents[fr_FR] PASSED
     ...

.. note:: if unset, PAGE_LAYOUT_LOCALES defaults to en_US

The screenshots for ``fr_FR`` are available in
``securedrop/tests/pages-layout/screenshots/fr_FR`` and the name of
the file can be found in the function that created it in
``securedrop/tests/pages-layout/test_journalist.py`` or
``securedrop/tests/pages-layout/test_source.py``.

Merging translations
--------------------

`Weblate`_ pushes the translations done via the web interface
to the develop branch in a fork of the `SecureDrop git repository`_.
These commits must be manually cherry-picked and proposed as pull
requests for the `SecureDrop git repository`_.

.. todo:: is this intermediate step necessary, even when the need-review
   flag is set ? Ideally the need-review step blocks merging and
   we can have Weblate merge in develop directly ?

.. _`gettext`: https://www.gnu.org/software/gettext/
.. _`pybabel`: http://babel.pocoo.org/
.. _`Weblate`: http://weblate.securedrop.club/
.. _`SecureDrop git repository`: https://github.com/freedomofpress/securedrop
