pipeline {
    agent { label 'aws-builders' }

    environment {
        CI_AWS_REGION = "us-west-1"
        CI_AWS_TYPE = "t2.medium"
        CI_SD_ENV = "staging"
        CI_SG_NAME = "jenkins"
        CI_VPC_NAME = "ci-vpc"
        CI_PROFILE_NAME = "vpc_lockdown_jenkins"
        CI_SUBNET_NAME = "jenkins-ci-subnet"
        CI_AWS_PUBLIC_IP = "no"
        CI_SLACK_CHANNEL = "#securedrop"
        ANSIBLE_INVENTORY = "molecule/aws/.molecule/ansible_inventory.yml"
        FPF_GRSEC = "false" }

    stages{
        stage('Install with Tor nightly repo') {
            steps {
                deleteDir()
                git branch: 'develop', url: 'https://github.com/freedomofpress/securedrop.git'

                sh '''. devops/scripts/aws-jenkins-venv.sh
                    |pip install -r testinfra/requirements.txt '''.stripMargin()

                sh '''. devops/scripts/aws-jenkins-venv.sh
                    |make build-debs
                    |molecule converge -s aws -- -e primary_network_iface=eth0 -e tor_repo_distro=tor-nightly-0.3.1.x-trusty -e tor_repo_pkgs='tor' --skip-tags app-test,grsec
                    |molecule verify -s aws'''.stripMargin()
            }
        }
    }
            post {
                failure {
                    script {
                        tor_version = readFile "${env.WORKSPACE}/.tor_version"
                    }
                    slackSend (color: '#FF0000',
                                channel: "${env.CI_SLACK_CHANNEL}",
                                message: "Failed job '${env.JOB_NAME}' (${env.BUILD_URL}) - ${tor_version}")
                }
                success {
                    script {
                        tor_version = readFile "${env.WORKSPACE}/.tor_version"
                    }
                    slackSend (color: 'good',
                                channel: "${env.CI_SLACK_CHANNEL}",
                                message: "Successful job '${env.JOB_NAME}' (${env.BUILD_URL}) - ${tor_version}")
                }
                aborted {
                    sh '''
                    |. devops/scripts/aws-jenkins-venv.sh
                    |molecule destroy -s aws '''.stripMargin()
                }
                always {
                    sh '''
                    |. devops/scripts/aws-jenkins-venv.sh
                    |molecule destroy -s aws '''.stripMargin()
                }
            }
}
