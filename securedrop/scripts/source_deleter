#!/opt/venvs/securedrop-app-code/bin/python

#
# Purges deleted sources and their data.
#

import argparse
import logging
import sys
import time

sys.path.insert(0, ".")  # noqa: E402
sys.path.insert(
    0, "/opt/venvs/securedrop-app-code/lib/python3.5/site-packages"
)  # noqa: E402
sys.path.insert(0, "/var/www/securedrop")  # noqa: E402

import journalist_app
from sdconfig import config


def parse_args():
    parser = argparse.ArgumentParser(
        prog=__file__,
        description="Utility for asynchronous deletion of SecureDrop sources and their data.",
    )
    parser.add_argument(
        "-i", "--interval", type=int, help="Keep running every 'interval' seconds.",
    )

    return parser.parse_args()


def purge_deleted_sources():
    try:
        journalist_app.utils.purge_deleted_sources()
    except Exception as e:
        logging.info("Error purging deleted sources: {}".format(e))


def main():
    args = parse_args()
    logging.basicConfig(
        format="%(asctime)s %(levelname)s %(message)s", level=logging.INFO
    )
    if args.interval:
        logging.info("Purging deleted sources every {} seconds.".format(args.interval))
        while 1:
            purge_deleted_sources()
            time.sleep(args.interval)
    else:
        logging.info("Purging deleted sources once.")
        purge_deleted_sources()


if __name__ == "__main__":
    app = journalist_app.create_app(config)
    with app.app_context():
        main()
