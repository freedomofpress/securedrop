#!/usr/bin/env ansible-playbook
---
- name: Reboot and wait
  hosts: securedrop
  become: yes
  tasks:
    # THIS IS BEING SKIPPED TEMPORARILY TO RESOLVE CI ISSUES
    # NEED TO REMOVE `when` HERE and XFAIL ON IPTABLES TESTS
    # WHEN REINSTATING REBOOT
    - include: reboot_and_wait.yml
      when: "false"

- name: Run application test suite in CI.
  hosts: "app-{{ ci_env }}"
  become: yes
  gather_facts: false
  tasks:

    - name: Run application tests
      script: scripts/app-tests.sh "{{ app_dir[ci_env] }}"
      register: app_test_register
      ignore_errors: true
      no_log: true

      # The test results file will be posted as an artifact for the CI run,
      # so developers can download it and inspect it in detail.
    - name: Fetch JUnit test results XML file.
      fetch:
        src: /tmp/apptest.xml
        dest: ../../apptest-results.xml
        flat: yes

    - name: Run testinfra tests
      command: "{{ molecule_scenario_directory }}/scripts/ci-tester.sh"
      args:
        chdir: ../../
      environment:
        MON_IP: "{{ molecule_instance_yml | selectattr('instance','match','^mon') | map(attribute='priv_address')|first }}"
        APP_IP: "{{ molecule_instance_yml | selectattr('instance','match','^app') | map(attribute='priv_address')|first }}"
        CI_SSH_CONFIG: "{{ molecule_instance_yml[0].identity_file }}-config"
      register: testinfra_results
      delegate_to: localhost
      become: no
      ignore_errors: true
      no_log: true

    - fail:
      when: app_test_register|failed or testinfra_results|failed
  vars:
    ci_env: "{{ lookup('env', 'CI_SD_ENV') }}"
    # We must define this var at the play-level since the group/host vars
    # won't automatically be included, since they're relative to the
    # provisioning playbooks (rather than the CI bootstrapping playbooks).
    app_dir:
      staging: /var/www/securedrop
    molecule_instance_yml: "{{ lookup('file', molecule_instance_config) | from_yaml }}"
    molecule_instance_config: "{{ lookup('env', 'MOLECULE_INSTANCE_CONFIG') }}"
    molecule_scenario_directory: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}"
