---
- name: Create CI remote hosts for testing SecureDrop config.
  hosts: localhost
  become: no
  gather_facts: true
  tasks:
    - name: Ensure CI environment vars are declared.
      assert:
        that:
          - ci_environment != ""
          - aws_ec2_ci_tags.build_num != ""
          - aws_ec2_vpc_id != ""

    - include: tor.yml

    - name: Store job_id (job name and build number) as host fact.
      set_fact:
        job_id: "{{ aws_ec2_ci_tags.job_name }}-{{ aws_ec2_ci_tags.build_num }}"

    - name: Generate temporary SSH key for logging into CI hosts.
      user:
        name: "{{ ansible_user_id }}"
        generate_ssh_key: yes
        ssh_key_bits: 4096
        ssh_key_file: "{{ molecule_ephemeral_directory}}/{{ job_id }}"

    - name: Add temporary SSH key to AWS region.
      ec2_key:
        name: "sdci-{{ job_id }}"
        region: "{{ aws_ec2_ci_region }}"
        key_material: "{{ lookup('file',molecule_ephemeral_directory+'/{{ job_id }}.pub') }}"

    - name: Find VPC subnet.
      ec2_vpc_subnet_facts:
        region: "{{ aws_ec2_ci_region }}"
        filters:
          vpc-id: "{{ aws_ec2_vpc_id }}"
      register: vpc_subnet_result

    - include: aws-launch.yml

  handlers:
    - name: aws relaunch
      include: aws-launch.yml
  vars:
    aws_ec2_instance_type: "{{ ansible_env.CI_AWS_TYPE | mandatory }}"
    aws_ec2_ci_region: "{{ ansible_env.CI_AWS_REGION | default('us-west-1') }}"
    aws_ec2_vpc_id: "{{ ansible_env.CI_AWS_VPC_ID | mandatory }}"
    aws_ec2_boot_timeout: "500"
    aws_ec2_sg_id: "sg-3b2e5f5d"
    ci_environment: "{{ ansible_env.CI_SD_ENV | mandatory }}"
    ci_box_ip: "{{ lookup('pipe', 'curl -s ifconfig.co') }}"
    molecule_yml: "{{ lookup('file', molecule_file) | from_yaml }}"
    molecule_file: "{{ lookup('env', 'MOLECULE_FILE') }}"
    molecule_instance_config: "{{ lookup('env', 'MOLECULE_INSTANCE_CONFIG') }}"
    molecule_instance_config_yml: "{{ lookup('file', molecule_instance_config)|from_yaml }}"
    molecule_ephemeral_directory: "{{ lookup('env', 'MOLECULE_EPHEMERAL_DIRECTORY') }}"
    aws_ec2_ci_tags:
      job_name: "securedrop-ci"
      build_num: "{{ ansible_env.CIRCLE_BUILD_NUM | mandatory }}"
    aws_ec2_ci_userdata: |
      #!/bin/bash
      adduser --ingroup sudo --disabled-password --gecos "" sdrop
      mkdir -p /home/sdrop/.ssh
      curl -s http://169.254.169.254/2011-01-01/meta-data/public-keys/0/openssh-key > /home/sdrop/.ssh/authorized_keys
      chown sdrop -R /home/sdrop/.ssh
      chmod 700 -R /home/sdrop/.ssh
      echo "sdrop ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
