---
- name: Converge
  hosts: all
  gather_facts: yes
  vars:
    tor_debs:
      - tor
      - tor-geoipdb
    sd_repo_root: "{{ lookup('pipe', 'git rev-parse --show-toplevel') }}"
    tor_download_dir: /tmp/tor-debs
    tor_download_dest: "{{ sd_repo_root + '/build/' + ansible_distribution_release }}"
    tor_repo_pubkey: "{{ sd_repo_root + '/install_files/ansible-base/roles/tor-hidden-services/files/tor-signing-key.pub' }}"
    tor_repo_url: "deb https://deb.torproject.org/torproject.org {{ ansible_distribution_release }} main"
    # Used to fetch a precise version; must also be updated in the test vars
    tor_version: "0.4.3.6-1~{{ ansible_distribution_release }}+1"

  tasks:
    - name: Add Tor apt repo pubkey
      apt_key:
        data: "{{ lookup('file', tor_repo_pubkey) }}"
        state: present

    - name: Add Tor apt repo URL
      apt_repository:
        repo: "{{ tor_repo_url }}"
        state: present

    - name: Create temporary dir for downloading debs
      file:
        state: directory
        path: "{{ tor_download_dir }}"

    - name: Download Tor debs
      command: apt-get download "{{ item }}={{ tor_version }}"
      args:
        chdir: "{{ tor_download_dir }}"
        # apt module doesn't support download, so silence warnings,
        # and skip the ansible-lint step on this task, as well.
        warn: no
      tags: skip_ansible_lint
      with_items: "{{ tor_debs }}"

    - name: Find downloaded Tor debs
      find:
        paths:
          - "{{ tor_download_dir }}"
        patterns:
          - '*.deb'
      register: _find_tor_debs_result

    - name: Fetch downloaded Tor debs back to submodule
      fetch:
        flat: yes
        src: "{{ item.path }}"
        dest: "{{ tor_download_dest }}/"
      with_items: "{{ _find_tor_debs_result.files }}"

    - name: Display location of fetched files
      debug:
        msg: >
          Tor deb packages have been downloaded to '{{ tor_download_dest }}'.
