---
# Use Ubuntu 14.04 LTS images, and explicitly require sudo.
# Relevant docs: https://docs.travis-ci.com/user/trusty-ci-environment/
sudo: required
dist: trusty
# Use old Trusty images, since new ones are failing Selenium tests.
# Must be updated by 2017-09-01. More info:
# https://blog.travis-ci.com/2017-06-21-trusty-updates-2017-Q2-launch
group: deprecated-2017Q2

language: python
python:
  - '2.7'

virtualenv:
  system_site_packages: true
before_install:
  - 'for e in /.packer-env/*; do echo -n "${e}: "; cat "${e}"; done'
  - printenv | sort # dump Travis environment for debugging
  - sudo apt-get update -qq
  - sudo apt-get install --yes rng-tools
  - sudo rm -f /dev/random
  - sudo mknod -m 0666 /dev/random c 1 9
  - echo HRNGDEVICE=/dev/urandom | sudo tee /etc/default/rng-tools
  - sudo /etc/init.d/rng-tools restart
install:
  - pip freeze -l
  # Remove all pre-installed Python packages
  - pip freeze | xargs pip uninstall -y
  - pip freeze -l
  - pip install -r testinfra/requirements.txt
  - pip freeze -l
script:
  # Using YAML folding operator '>' to aid in readability and avoid
  # extremely long lines.
  - >
      printf
      "[development]\nlocalhost ansible_connection=local\n[travis]\nlocalhost"
      > inventory
  - >
      ansible-playbook -i inventory -vv --syntax-check
      install_files/ansible-base/securedrop-development.yml
  - >
      ansible-playbook -i inventory -vv --connection=local
      install_files/ansible-base/securedrop-development.yml

  # For some reason, redis-server does not start automatically when installed
  # on Travis. I believe Travis' service machinery may be interfering. See
  # http://docs.travis-ci.com/user/database-setup/#Redis
  - sudo service redis-server start
  # Travis needs the config.py file to be owned by root. In other environments
  # it's the `securedrop_user` var.
  - sudo chown root:root securedrop/config.py
  - sudo sh -c "export DISPLAY=:1; cd securedrop/ && pytest -v tests/"
  - SECUREDROP_TESTINFRA_TARGET_HOST=travis testinfra -v testinfra/development/
  - pip freeze -l
  # Docs linting. Performing this step *after* build VM tests pass, so as not
  # to alter the pip requirements, which would cause config tests to fail.
  - pip install -r securedrop/requirements/develop-requirements.txt
  - make docs-lint
  - pushd securedrop; flake8 db.py crypto_util.py store.py source.py template_filters.py tests/test_2fa.py tests/conftest.py tests/test_crypto_util.py ../update_python_dependencies.py ; popd
after_success:
  cd securedrop/ && coveralls
