#!/usr/bin/env python
"""
Forked from https://github.com/cbrueffer/pep8-git-hook

Setup:
    1. Install the pep8 program: $ pip install pep8
    2. Save pre-commit as securedrop/.git/hooks/pre-commit
    3. Mark pre-commit executable: $ chmod +x securedrop/.git/hooks/pre-commit

The hook can be overridden with: git commit --no-verify
"""
from __future__ import with_statement, print_function
import os
import re
import shutil
import subprocess
import sys
import tempfile

# Ignore: E402 module level import not at top of file
# This is because a bunch of the test files currently need this to work with
# config.py
ignore_codes = ["E402"]


def system(*args, **kwargs):
    kwargs.setdefault('stdout', subprocess.PIPE)
    proc = subprocess.Popen(args, **kwargs)
    out, err = proc.communicate()
    return out


def main():
    modified = re.compile('^[AM]+\s+(?P<name>.*\.py$)', re.MULTILINE)
    files = system('git', 'status', '--porcelain').decode("utf-8")
    files = modified.findall(files)

    tempdir = tempfile.mkdtemp()
    for name in files:
        filename = os.path.join(tempdir, name)
        filepath = os.path.dirname(filename)

        if not os.path.exists(filepath):
            os.makedirs(filepath)
        with open(filename, 'w') as f:
            system('git', 'show', ':' + name, stdout=f)

    args = ['pep8']
    if ignore_codes:
        args.extend(('--ignore', ','.join(ignore_codes)))
    args.append('.')
    output = system(*args, cwd=tempdir)
    shutil.rmtree(tempdir)
    if output:
        print(u'PEP8 style violations have been detected.  Please fix them\n'
              'or force the commit with "git commit --no-verify".\n')
        print(output.decode("utf-8"),)
        sys.exit(1)


if __name__ == '__main__':
    main()
